/* Copyright (c) 2014 	Andrey Mikhalevich, Katren ltd.*//*		Description*///ф/** Requirements  * @requires*//* constructor */function EditMoneyEditable(id,options){	options = options || {};		this.m_onToggle = options.onToggle;	this.m_editAllowedFieldCtrl = options.editAllowedFieldCtrl;			EditMoneyEditable.superclass.constructor.call(this,id,options);	var self = this;	this.m_btnEdit = new ButtonCtrl(id+"_btn_edit",{		"attrs":{"title":"разрешить редактирование"},		"glyph":"glyphicon-pencil",		"onClick":function(){			self.toggleEdit();		}	});	this.m_buttons.addElement(this.m_btnEdit);}extend(EditMoneyEditable,EditMoney);EditMoneyEditable.prototype.toggleEdit = function(){	var val_b = true	var val_s = "true";	if (this.m_editAllowedFieldCtrl.getValue()=="true"){		val_b = false;		val_s = "false";	}	this.m_editAllowedFieldCtrl.setValue(val_s);	this.setEnabled(val_b);		if (val_b){		this.m_node.focus();	}	if(this.m_onToggle){		this.m_onToggle(val_b);	}}EditMoneyEditable.prototype.toDOM = function(parent){	EditMoneyEditable.superclass.toDOM.call(this,parent);	if (this.m_editAllowedFieldCtrl.getValue()=="false"){		this.setEnabled(false);	}}EditMoneyEditable.prototype.setEnabled = function(en){	EditMoneyEditable.superclass.setEnabled.call(this,en);	if (this.m_btnEdit){		this.m_btnEdit.setEnabled(true);	}}EditMoneyEditable.prototype.setEditEnabled = function(en){	this.m_btnEdit.setEnabled(en);}