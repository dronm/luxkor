/* Copyright (c) 2012 	Andrey Mikhalevich, Katren ltd.*//*		Description*///ф/** Requirements * @requires controls/ViewDialog.js*//* constructor */function UserDialog_View(id,options){	options = options || {};	options.readMethodId = options.readMethodId || this.DEF_READ_METH_ID;	options.writeController = options.writeController || options.readController;	UserDialog_View.superclass.constructor.call(this,		id,options);			var ctrl_cl = "input-group "+get_bs_col();			this.addDataControl(		new EditNum("UserDialog_Model_id",		{"labelCaption":"Код:","name":"id",		"attrs":{"disabled":"disabled","size":5},		"noSelect":true,		"editContClassName":ctrl_cl+"2"		}		),		{"modelId":"UserDialog_Model",		"valueFieldId":"id",		"keyFieldIds":null},		{"valueFieldId":"id","keyFieldIds":null},		{"autoFillOnInsert":true}	);	this.addDataControl(		new EditString("UserDialog_Model_name",		{"labelCaption":"Логин:","name":"name",		"attrs":{"maxlength":100,"size":50,"required":"required"},		"editContClassName":ctrl_cl+"4"		}		),		{"modelId":"UserDialog_Model",		"valueFieldId":"name",		"keyFieldIds":null},		{"valueFieldId":"name","keyFieldIds":null}	);	this.addDataControl(		new EditString("UserDialog_Model_name_full",		{"labelCaption":"ФИО:",		"name":"name_full",				"editContClassName":ctrl_cl+"4",		"attrs":{"maxlength":150,				"size":80,				"required":"required",				"title":"ФИО физического лица"			}		}		),		{"modelId":"UserDialog_Model",		"valueFieldId":"name_full",		"keyFieldIds":null},		{"valueFieldId":"name_full","keyFieldIds":null}	);		this.addDataControl(new EditSelectObject("UserDialog_Model_role_type",			{"labelCaption":"Роль:","name":"",			"editContClassName":ctrl_cl+"4",			"methodId":"get_enum_list",			"modelId":"EnumList_Model",			"lookupValueFieldId":"descr",			"lookupKeyFieldIds":["id"],					"keyFieldIds":["role_id"],			"controller":new Enum_Controller(new ServConnector(HOST_NAME)),			"noOpen":true,			"listView":null,			"noAutoRefresh":false,			"methParams":{"id":"role_types"},			"defaultId":"sales_manager"			}),		{"modelId":"UserDialog_Model",		"valueFieldId":"role_descr",		"keyFieldIds":["role_id"]},		{"valueFieldId":null,"keyFieldIds":["role_id"]}	);			this.addDataControl(		new EditString("UserDialog_Model_ext_login",		{"labelCaption":"Имя пользователя в 1с:",		"editContClassName":ctrl_cl+"4",		"name":"ext_login",				"attrs":{"maxlength":100,				"size":50,				"title":"Имя пользователя как оно задано в 1с"			},		"alwaysUpdate":true		}		),		{"modelId":"UserDialog_Model",		"valueFieldId":"ext_login",		"keyFieldIds":null},		{"valueFieldId":"ext_login","keyFieldIds":null}	);		this.addDataControl(		new EditString("UserDialog_Model_email",		{"labelCaption":"Эл.почта:","name":"email",		"editContClassName":ctrl_cl+"4",		"attrs":{"maxlength":50,"size":20}		}		),		{"modelId":"UserDialog_Model",		"valueFieldId":"email",		"keyFieldIds":null},		{"valueFieldId":"email","keyFieldIds":null}	);		/*	this.addDataControl(new WarehouseEditObject(		"warehouse_id",		"warehouse",		false),		{"modelId":"UserDialog_Model",		"valueFieldId":"warehouse_descr",		"keyFieldIds":["warehouse_id"]},		{"valueFieldId":null,"keyFieldIds":["warehouse_id"]}	);		*/		this.addDataControl(		new EditString("UserDialog_Model_tel_ext",		{"labelCaption":"Внутр.номер телефона:","name":"tel_ext",		"editContClassName":ctrl_cl+"2",		"attrs":{"maxlength":4,"size":8}		}		),		{"modelId":"UserDialog_Model",		"valueFieldId":"tel_ext",		"keyFieldIds":null},		{"valueFieldId":"tel_ext","keyFieldIds":null}	);		//договоры	var sub_cont = new ControlContainer(uuid(),"div",{});	this.m_warehouseList = new UserWarehouseList_View("UserWarehouseList",options);	sub_cont.addElement(this.m_warehouseList);	this.addControl(sub_cont);	}extend(UserDialog_View,ViewDialog);UserDialog_View.prototype.onGetData = function(resp){	UserDialog_View.superclass.onGetData.call(this,resp);		var id=this.getDataControl("UserDialog_Model_id").control.getAttr("old_id");	if (id&&this.m_warehouseList){		//warehouses		this.m_warehouseList.setUserId(id);		this.m_warehouseList.m_grid.setEnabled(true);		this.m_warehouseList.m_grid.onRefresh();		}}	