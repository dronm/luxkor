<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0"  xmlns:html="http://www.w3.org/TR/REC-html40" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format"><xsl:import href="functions.xsl"/> <!--<xsl:output method="html"/> --><xsl:key name="price_lists" match="row" use="price_list_id/."/><xsl:key name="products" match="row" use="product_id/."/><xsl:key name="price_lists_products" match="row" use="concat(price_list_id/.,'|',product_id/.)"/><!-- Main template--><xsl:template match="/">	<xsl:apply-templates select="document/model[@id='ModelServResponse']"/>		<xsl:apply-templates select="document/model[@id='ModelVars']"/>		<xsl:apply-templates select="document/model[@id='RepPriceListTuning_Model']"/>		</xsl:template><!-- Error --><xsl:template match="model[@id='ModelServResponse']">	<xsl:if test="not(row[1]/result='0')">	<div class="error">		<xsl:value-of select="row[1]/descr"/>	</div>	</xsl:if></xsl:template><!-- table --><xsl:template match="model[@id='RepPriceListTuning_Model']">	<table id="RepPriceListTuning"	class="table table-bordered table-striped">		<!-- header -->		<thead>		<tr>			<th><div id="chb_h_price_name">&#160;</div>Наименование</th>			<th>Клиент</th>			<th>Город</th>			<th>Только третьим лицам</th>			<xsl:for-each select="//row[generate-id() =			generate-id(key('products',product_id/.)[1])]">								<xsl:sort select="product_descr/."/>				<th align="center">					<div productId="{product_id/.}" id="chb_h_product_descr_{product_id/.}" class="chb_product_descr">&#160;</div>					<xsl:value-of select="product_descr/."/>				</th>			</xsl:for-each>				</tr>		</thead> 		 		<!-- days -->		<tbody>		<xsl:for-each select="//row[generate-id() =		generate-id(key('price_lists',price_list_id/.)[1])]">			<xsl:sort select="client_descr/."/>			<xsl:variable name="price_list_id" select="price_list_id/."/>						<tr>				<!-- Прайс-->				<td align="center">					<div priceId="{$price_list_id}" class="chb_price_name" id="chb_price_name_{$price_list_id}">&#160;</div>					<xsl:value-of select="price_list_descr/."/>				</td>								<!-- Клиент-->				<td align="center">					<xsl:value-of select="client_descr/."/>				</td>				<!-- Город -->				<td align="center">					<xsl:value-of select="production_city_descr/."/>				</td>				<!-- Третьи лица -->				<td align="center">					<xsl:variable name="img">					<xsl:choose>					<xsl:when test="to_third_party_only/.='true'">						<xsl:value-of select="img/bool/true.png"/>					</xsl:when>										<xsl:otherwise>						<xsl:value-of select="img/bool/true.png"/>					</xsl:otherwise>					<img src="{$img}"/>					<xsl:value-of select="to_third_party_only/."/>					</xsl:choose>					</xsl:variable>				</td>								<xsl:for-each select="//row[generate-id() =				generate-id(key('products',product_id/.)[1])]">					<xsl:sort select="product_descr/."/>					<xsl:variable name="prod_row" select="key('price_lists_products',concat($price_list_id,'|',product_id/.))"/>					<td align="right">					<div productId="{product_id/.}" priceId="{$price_list_id}"						id="chb_price_val_{$price_list_id}_{product_id/.}"						class="chb_price_val">&#160;					</div>					<span productId="{product_id/.}" priceId="{$price_list_id}" oldVal="{$prod_row/price/.}">					<xsl:call-template name="format_money">						<xsl:with-param name="val" select="$prod_row/price/."/>					</xsl:call-template>																										</span>					</td>									</xsl:for-each>			</tr>		</xsl:for-each>		</tbody>			</table>	<form class="form-horizontal col-lg-3">		<div class="form-group">			<label class="control-label col-lg-4"			for="change_price_value">Изменить цену:</label>			<div class="input-group col-lg-8">				<div id="change_price_value">&#160;</div>				<span class="input-group-btn">					<div id="change_price_inc">&#160;</div>					<div id="change_price_dec">&#160;</div>									</span>			</div>					</div>		<div id="change_price_update">&#160;</div>	</form></xsl:template></xsl:stylesheet>